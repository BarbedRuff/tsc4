forall X -> int is_null (X x) asm "ISNULL";
forall X -> (tuple, ()) push_back (tuple tail, X head) asm "CONS";
forall X -> (tuple, (X)) pop_back (tuple t) asm "UNCONS";

() recv_internal() {
}

(int) find_branch_by_hash(int hash, cell tree) method_id {
  tuple stack = null();
  stack~push_back(tree);
  while (~ stack.is_null()) {
    slice s = stack~pop_back().begin_parse();
    repeat (s.slice_refs()) {
      cell m = s~load_ref();
      if (m.cell_hash() == hash) {
        return m;
      }
      stack~push_back(m);
    }
  }
  return begin_cell().end_cell();
}