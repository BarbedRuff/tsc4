forall X -> int is_null (X x) asm "ISNULL";
() recv_internal() {
}

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
  tuple stack = null();
  stack = cons(tree, stack);
  while (~ stack.is_null()) {
    cell s = stack~list_next();
    if(s.cell_hash() == hash){
      return s;
    }
    slice kek = s.begin_parse();
    repeat (kek.slice_refs()) {
      stack = cons(kek~load_ref(), stack);
    }
  }
  return begin_cell().end_cell();
}