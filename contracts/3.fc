forall X -> int is_null (X x) asm "ISNULL";
int pow2(int x) asm "POW2";
int bits(int number) asm "UBITSIZE";
int min(int x, int y) asm "MIN";

() recv_internal() {
}

(cell) find_and_replace(int flag, int value, cell linked_list) method_id {
    int flag_len = bits(flag);
    int exit = -1;
    builder build = begin_cell();
    tuple builders = null();
    int bufer = 0;
    slice s = linked_list.begin_parse();
    while (exit) {
        while (~ slice_data_empty?(s)){
            int slide = (min(s.slice_bits(), (flag_len - bits(bufer))));
            int old_bufer_len = bits(bufer);
            bufer = bufer << slide;
            bufer += s~load_uint(slide);
            if (flag_len == bits(bufer)) {
                if (bufer == flag) {
                    if(builder_bits(build) + bits(value) > 1023){
                        builders = cons(build, builders);
                        build = begin_cell();
                    }
                    build~store_uint(value, bits(value));
                    bufer = 0;
                }
                else {
                    int tmp = bufer - pow2(flag_len - 1);
                    int vl = bufer >> bits(tmp);
                    if(builder_bits(build) + bits(vl) > 1023){
                        builders = cons(build, builders);
                        build = begin_cell();
                    }
                    build~store_uint(vl, bits(vl));
                    bufer = bufer - pow2(flag_len - 1);
                }
            }
            else {
                if (bits(bufer) != (old_bufer_len + slide)) {
                        if(builder_bits(build) + ((old_bufer_len + slide) - bits(bufer)) > 1023){
                        builders = cons(build, builders);
                        build = begin_cell();
                        }
                        build~store_uint(0, ((old_bufer_len + slide) - bits(bufer)));
                }
            }
        }
        if (s.slice_refs()) {
            s = s~load_ref().begin_parse();
        }
        else {
            exit = 0;
        }
    }
    if (bufer != 0) {
        if(builder_bits(build) + bits(bufer) > 1023){
            builders = cons(build, builders);
            build = begin_cell();
        }
        build~store_uint(bufer, bits(bufer));
    }
    if ((builders.is_null()) | (builder_bits(build) != 0)) {
        builders = cons(build, builders);
    }
    builder ans = builders~list_next();
    while (~ builders.is_null()) {
        ans = builders~list_next().store_ref(ans.end_cell());
    }
    return ans.end_cell();
}